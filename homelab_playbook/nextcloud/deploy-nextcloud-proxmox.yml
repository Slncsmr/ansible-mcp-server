---
- name: Deploy Nextcloud on Proxmox LXC Container
  hosts: localhost
  gather_facts: no
  vars:
    proxmox_host: 192.168.10.200
    proxmox_user: root@pam
    proxmox_password: Tenchi01!
    proxmox_node: localhost  # Update if different
    
    # LXC Configuration
    lxc_vmid: 110
    lxc_hostname: nextcloud
    lxc_password: Tenchi01!
    lxc_cores: 4
    lxc_memory: 4096
    lxc_storage: local-lvm
    lxc_disk_size: 100
    lxc_bridge: vmbr0
    lxc_ip: 192.168.10.110/24
    lxc_gateway: 192.168.10.1
    
    # Nextcloud Configuration
    nextcloud_data_path: /mnt/storage/nextcloud
    mysql_root_password: Tenchi01!
    mysql_password: Tenchi01!
    nextcloud_admin_password: Tenchi01!

  tasks:
    - name: Remove Nextcloud from homelab2
      delegate_to: homelab2
      become: no
      block:
        - name: Stop and remove Nextcloud containers
          command: docker-compose -f /home/shaun/nextcloud-oauth-docker.yml down -v
          ignore_errors: yes
        
        - name: Remove Nextcloud data directory
          file:
            path: /home/shaun/nextcloud-data
            state: absent
          become: yes

    - name: Install required Python packages
      pip:
        name:
          - proxmoxer
          - requests
        state: present
      delegate_to: localhost

    - name: Create LXC container on Proxmox
      uri:
        url: "https://{{ proxmox_host }}:8006/api2/json/nodes/{{ proxmox_node }}/lxc"
        method: POST
        validate_certs: no
        headers:
          Content-Type: "application/json"
          Authorization: "PVEAPIToken={{ proxmox_user }}:{{ proxmox_password }}"
        body_format: json
        body:
          vmid: "{{ lxc_vmid }}"
          hostname: "{{ lxc_hostname }}"
          ostemplate: "local:vztmpl/ubuntu-22.04-standard_22.04-1_amd64.tar.zst"
          password: "{{ lxc_password }}"
          cores: "{{ lxc_cores }}"
          memory: "{{ lxc_memory }}"
          storage: "{{ lxc_storage }}"
          rootfs: "{{ lxc_storage }}:{{ lxc_disk_size }}"
          net0: "name=eth0,bridge={{ lxc_bridge }},ip={{ lxc_ip }},gw={{ lxc_gateway }}"
          features: "keyctl=1,nesting=1"
          unprivileged: 1
          start: 1
      register: create_lxc
      ignore_errors: yes

    - name: Wait for LXC to be ready
      pause:
        seconds: 30
      when: create_lxc is succeeded

    - name: Add LXC to inventory
      add_host:
        name: nextcloud-lxc
        ansible_host: "{{ lxc_ip.split('/')[0] }}"
        ansible_user: root
        ansible_password: "{{ lxc_password }}"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

- name: Configure Nextcloud LXC
  hosts: nextcloud-lxc
  gather_facts: yes
  become: yes
  vars:
    nextcloud_data_path: /mnt/storage/nextcloud
    mysql_root_password: Tenchi01!
    mysql_password: Tenchi01!
    nextcloud_admin_password: Tenchi01!
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        
    - name: Install required packages
      apt:
        name:
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
          - python3-pip
        state: present

    - name: Add Docker GPG key
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg

    - name: Add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Install docker-compose standalone
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Create Nextcloud directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /opt/nextcloud
        - "{{ nextcloud_data_path }}"
        - "{{ nextcloud_data_path }}/data"
        - "{{ nextcloud_data_path }}/config"
        - "{{ nextcloud_data_path }}/apps"

    - name: Create Nextcloud docker-compose.yml
      copy:
        dest: /opt/nextcloud/docker-compose.yml
        content: |
          version: '3.8'

          services:
            nextcloud-db:
              image: mariadb:10.11
              container_name: nextcloud-db
              restart: unless-stopped
              environment:
                - MYSQL_ROOT_PASSWORD={{ mysql_root_password }}
                - MYSQL_DATABASE=nextcloud
                - MYSQL_USER=nextcloud
                - MYSQL_PASSWORD={{ mysql_password }}
              volumes:
                - nextcloud-db:/var/lib/mysql

            nextcloud-redis:
              image: redis:alpine
              container_name: nextcloud-redis
              restart: unless-stopped

            nextcloud:
              image: nextcloud:latest
              container_name: nextcloud
              restart: unless-stopped
              ports:
                - 80:80
              depends_on:
                - nextcloud-db
                - nextcloud-redis
              environment:
                - MYSQL_HOST=nextcloud-db
                - MYSQL_DATABASE=nextcloud
                - MYSQL_USER=nextcloud
                - MYSQL_PASSWORD={{ mysql_password }}
                - REDIS_HOST=nextcloud-redis
                - NEXTCLOUD_TRUSTED_DOMAINS=nextcloud.shaunjackson.space {{ lxc_ip.split('/')[0] }}
                - OVERWRITEPROTOCOL=http
                - OVERWRITEHOST=nextcloud.shaunjackson.space
                - NEXTCLOUD_ADMIN_USER=admin
                - NEXTCLOUD_ADMIN_PASSWORD={{ nextcloud_admin_password }}
              volumes:
                - {{ nextcloud_data_path }}/data:/var/www/html/data
                - {{ nextcloud_data_path }}/config:/var/www/html/config
                - {{ nextcloud_data_path }}/apps:/var/www/html/custom_apps

            onlyoffice:
              image: onlyoffice/documentserver:latest
              container_name: onlyoffice
              restart: unless-stopped
              ports:
                - 8080:80
              environment:
                - JWT_SECRET=your-secret-key
              volumes:
                - onlyoffice-data:/var/www/onlyoffice/Data
                - onlyoffice-logs:/var/log/onlyoffice

          volumes:
            nextcloud-db:
            onlyoffice-data:
            onlyoffice-logs:

    - name: Start Nextcloud
      shell: |
        cd /opt/nextcloud
        docker-compose up -d
      register: docker_result

    - name: Wait for Nextcloud to be ready
      uri:
        url: "http://{{ lxc_ip.split('/')[0] }}"
        status_code: 200,302
      register: result
      until: result.status == 200 or result.status == 302
      retries: 30
      delay: 10

    - name: Display access information
      debug:
        msg: |
          Nextcloud is now running on Proxmox!
          
          Access URLs:
          - Direct: http://{{ lxc_ip.split('/')[0] }}
          - Domain: http://nextcloud.shaunjackson.space (after adding to NPM)
          
          Admin credentials:
          - Username: admin
          - Password: {{ nextcloud_admin_password }}
          
          Container info:
          - LXC ID: {{ lxc_vmid }}
          - IP: {{ lxc_ip.split('/')[0] }}
          
          Next steps:
          1. Add to Nginx Proxy Manager:
             - Domain: nextcloud.shaunjackson.space
             - Forward to: {{ lxc_ip.split('/')[0] }}
             - Port: 80
          
          2. Configure Microsoft OAuth:
             - Install "OpenID Connect Login" app
             - Configure with your Microsoft app credentials