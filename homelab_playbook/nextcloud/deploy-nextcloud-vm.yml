---
- name: Deploy Nextcloud VM from ISO on Proxmox
  hosts: proxmox
  gather_facts: no
  vars:
    ansible_host: 192.168.10.200
    ansible_user: root
    ansible_password: Tenchi01!
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
    
    # VM Configuration
    vm_id: 111
    vm_name: nextcloud
    vm_cores: 4
    vm_memory: 4096
    vm_disk_size: 100G
    vm_storage: local-lvm
    vm_bridge: vmbr0
    vm_ip: 192.168.10.111
    iso_storage: local
    iso_name: nextcloud.iso  # Update with actual ISO filename
    
  tasks:
    - name: Check if ISO exists in storage
      shell: |
        pvesm list {{ iso_storage }} | grep -i nextcloud | head -1 | awk '{print $1}'
      register: iso_check
      changed_when: false

    - name: Display found ISO
      debug:
        msg: "Found ISO: {{ iso_check.stdout }}"
      when: iso_check.stdout != ""

    - name: Stop and remove existing LXC container if exists
      shell: |
        if pct status 110 &>/dev/null; then
          pct stop 110 || true
          sleep 5
          pct destroy 110 || true
        fi
      ignore_errors: yes

    - name: Check if VM already exists
      shell: qm status {{ vm_id }}
      register: vm_exists
      ignore_errors: yes
      changed_when: false

    - name: Stop and remove existing VM if exists
      shell: |
        qm stop {{ vm_id }} || true
        sleep 5
        qm destroy {{ vm_id }} || true
      when: vm_exists.rc == 0

    - name: Create VM for Nextcloud
      shell: |
        qm create {{ vm_id }} \
          --name {{ vm_name }} \
          --memory {{ vm_memory }} \
          --cores {{ vm_cores }} \
          --net0 virtio,bridge={{ vm_bridge }} \
          --cdrom {{ iso_storage }}:iso/{{ iso_check.stdout | default(iso_name) }} \
          --boot order=scsi0 \
          --ostype l26 \
          --scsihw virtio-scsi-pci
      register: vm_created

    - name: Add disk to VM
      shell: |
        qm disk resize {{ vm_id }} scsi0 {{ vm_disk_size }} 2>/dev/null || \
        qm set {{ vm_id }} --scsi0 {{ vm_storage }}:{{ vm_disk_size }}
      when: vm_created is succeeded

    - name: Set VM to start on boot
      shell: qm set {{ vm_id }} --onboot 1
      when: vm_created is succeeded

    - name: Enable QEMU guest agent
      shell: qm set {{ vm_id }} --agent 1
      when: vm_created is succeeded

    - name: Start the VM
      shell: qm start {{ vm_id }}
      when: vm_created is succeeded

    - name: Wait for VM to boot
      pause:
        seconds: 30
      when: vm_created is succeeded

    - name: Get VM network configuration instructions
      debug:
        msg: |
          ==========================================
          Nextcloud VM Deployment Started!
          ==========================================
          
          VM ID: {{ vm_id }}
          VM Name: {{ vm_name }}
          Resources: {{ vm_cores }} cores, {{ vm_memory }}MB RAM, {{ vm_disk_size }} disk
          
          Next Steps:
          1. Open Proxmox console: https://{{ ansible_host }}:8006
          2. Open VM {{ vm_id }} console
          3. Complete Nextcloud installation:
             - Set static IP: {{ vm_ip }}/24
             - Gateway: 192.168.10.1
             - DNS: 192.168.10.1
             - Admin password: Tenchi01!
          
          4. After installation, access at:
             - https://{{ vm_ip }}
             - Add to NPM as nextcloud.shaunjackson.space
          
          5. Configure Microsoft OAuth:
             - Install "OIDC Login" app
             - Configure with your Microsoft credentials
          
          Note: Nextcloud VM includes:
          - Nextcloud Hub
          - OnlyOffice/Collabora
          - Talk (video chat)
          - Full admin tools
          - Automatic updates
          - Backup scripts
          ==========================================

- name: Create Ansible inventory entry for Nextcloud VM
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Add Nextcloud VM to inventory
      lineinfile:
        path: /home/shaun/ansible-mcp-server/inventory/services.yml
        line: |
          nextcloud:
            ansible_host: 192.168.10.111
            ansible_user: ncadmin
            vm_id: 111
            service_url: https://nextcloud.shaunjackson.space
        create: yes

    - name: Create post-install configuration playbook
      copy:
        dest: /home/shaun/ansible-mcp-server/configure-nextcloud-vm.yml
        content: |
          ---
          # Run this after Nextcloud VM installation is complete
          - name: Configure Nextcloud VM Post-Install
            hosts: nextcloud
            gather_facts: yes
            become: yes
            
            tasks:
              - name: Install required packages
                apt:
                  name:
                    - python3-pip
                    - python3-setuptools
                  state: present
                  update_cache: yes
              
              - name: Configure Nextcloud for Microsoft OAuth
                shell: |
                  sudo -u www-data php /var/www/nextcloud/occ app:install oidc_login
                  sudo -u www-data php /var/www/nextcloud/occ config:app:set oidc_login provider_url --value="https://login.microsoftonline.com/consumers/v2.0"
                  sudo -u www-data php /var/www/nextcloud/occ config:app:set oidc_login client_id --value="YOUR_CLIENT_ID"
                  sudo -u www-data php /var/www/nextcloud/occ config:app:set oidc_login client_secret --value="YOUR_CLIENT_SECRET"
                register: oauth_config
              
              - name: Set trusted domains
                shell: |
                  sudo -u www-data php /var/www/nextcloud/occ config:system:set trusted_domains 1 --value="nextcloud.shaunjackson.space"
                  sudo -u www-data php /var/www/nextcloud/occ config:system:set trusted_domains 2 --value="{{ ansible_host }}"
              
              - name: Enable required apps
                shell: |
                  sudo -u www-data php /var/www/nextcloud/occ app:enable onlyoffice
                  sudo -u www-data php /var/www/nextcloud/occ app:enable talk
                  sudo -u www-data php /var/www/nextcloud/occ app:enable calendar
                  sudo -u www-data php /var/www/nextcloud/occ app:enable contacts
                ignore_errors: yes